/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.MainLogic;
import controller.Tool;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Accommodation;
import model.Client;
import model.Room;

/**
 *
 * @author kappe
 */
public class ShowAccommodationHistoryFrame extends javax.swing.JFrame {

    private final MainFrame parentFrame;
    private final MainLogic app;
    private final DecimalFormat formatter;
    private ArrayList<Accommodation> filteredAccommodations;

    /**
     * Creates new form ShowAccommodationHistoryFrame
     *
     * @param parentFrame
     */
    public ShowAccommodationHistoryFrame(MainFrame parentFrame) {
        initComponents();

        this.parentFrame = parentFrame;
        this.app = parentFrame.app;
        this.formatter = new DecimalFormat("########0.00");

        populateTypeComboBox();
        populateRoomComboBox();
        populateClientComboBox();
    }

    private void populateTypeComboBox() {
        String[] freelancerTypes = {"História ubytovaní pre izby", "História ubytovaní pre zákazníkov"};
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(freelancerTypes));
        typeComboBox.setSelectedIndex(0);
    }

    private void populateRoomComboBox() {
        String[] rooms = app.getRoomsId();
        roomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(rooms));

        if (roomComboBox.getModel().getSize() > 0) {
            roomComboBox.setSelectedIndex(0);
        }
    }

    private void populateClientComboBox() {
        String[] clients = app.getClientsDescription();
        clientComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(clients));

        if (clientComboBox.getModel().getSize() > 0) {
            clientComboBox.setSelectedIndex(0);
        }
    }

    private void populateRoomsTable(Room room) {
        DefaultTableModel tblModel = (DefaultTableModel) roomsTbl.getModel();
        tblModel.setRowCount(0);

        filteredAccommodations = app.getAccommodationsByRoom(room);
        for (int i = 0; i < filteredAccommodations.size(); i++) {
            Accommodation a = filteredAccommodations.get(i);

            String[] row = {a.getClient().getName(), Tool.dateToString(a.getFrom()), Tool.dateToString(a.getUntil()),
                formatter.format(a.getTotalPrice()) + " €", a.isPaid() ? "zaplatené" : "nezaplatené"};
            tblModel.addRow(row);
        }
    }

    private void populateClientsTable(Client client) {
        DefaultTableModel tblModel = (DefaultTableModel) clientsTbl.getModel();
        tblModel.setRowCount(0);

        filteredAccommodations = app.getAccommodationsByClient(client);
        for (int i = 0; i < filteredAccommodations.size(); i++) {
            Accommodation a = filteredAccommodations.get(i);

            String[] row = {a.getRoom().getId(), Tool.dateToString(a.getFrom()), Tool.dateToString(a.getUntil()),
                formatter.format(a.getTotalPrice()) + " €", a.isPaid() ? "zaplatené" : "nezaplatené"};
            tblModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        middlePanel = new javax.swing.JPanel();
        roomHistoryPanel = new javax.swing.JPanel();
        roomComboBox = new javax.swing.JComboBox<>();
        roomLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomsTbl = new javax.swing.JTable();
        clientHistoryPanel = new javax.swing.JPanel();
        clientComboBox = new javax.swing.JComboBox<>();
        clientLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientsTbl = new javax.swing.JTable();
        bottomPanel = new javax.swing.JPanel();
        detailsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("História ubytovaní");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setLayout(new java.awt.BorderLayout());

        topPanel.setBackground(new java.awt.Color(204, 177, 244));
        topPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLbl.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(0, 0, 0));
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("História ubytovaní");
        topPanel.add(titleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 700, 50));

        nameLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(144, 14, 126));
        nameLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLbl.setText("Typ histórie:");
        topPanel.add(nameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 180, 30));

        typeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        topPanel.add(typeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 290, -1));

        mainPanel.add(topPanel, java.awt.BorderLayout.PAGE_START);

        middlePanel.setLayout(new java.awt.CardLayout());

        roomHistoryPanel.setBackground(new java.awt.Color(204, 177, 244));
        roomHistoryPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roomComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        roomComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomComboBoxActionPerformed(evt);
            }
        });
        roomHistoryPanel.add(roomComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 290, 30));

        roomLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        roomLbl.setForeground(new java.awt.Color(144, 14, 126));
        roomLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        roomLbl.setText("Izba:");
        roomHistoryPanel.add(roomLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 180, 30));

        roomsTbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Zákazník", "Dátum od", "Dátum do", "Cena", "Stav"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomsTbl.setRowHeight(20);
        roomsTbl.setSelectionBackground(new java.awt.Color(204, 0, 204));
        roomsTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(roomsTbl);
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setHorizontalAlignment(JLabel.CENTER);
        headerRenderer.setBackground(new Color(114, 14, 126));
        headerRenderer.setForeground(new Color(255, 255, 255));

        for (int i = 0; i < roomsTbl.getModel().getColumnCount(); i++) {
            roomsTbl.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }

        roomHistoryPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 650, 210));

        middlePanel.add(roomHistoryPanel, "card3");

        clientHistoryPanel.setBackground(new java.awt.Color(204, 177, 244));
        clientHistoryPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clientComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clientComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        clientComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientComboBoxActionPerformed(evt);
            }
        });
        clientHistoryPanel.add(clientComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 420, 30));

        clientLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        clientLbl.setForeground(new java.awt.Color(144, 14, 126));
        clientLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clientLbl.setText("Zákazník:");
        clientHistoryPanel.add(clientLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 110, 30));

        clientsTbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clientsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Izba", "Dátum od", "Dátum do", "Cena", "Stav"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientsTbl.setRowHeight(20);
        clientsTbl.setSelectionBackground(new java.awt.Color(204, 0, 204));
        clientsTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(clientsTbl);
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(JLabel.CENTER);
        dtcr.setBackground(new Color(114, 14, 126));
        dtcr.setForeground(new Color(255, 255, 255));

        for (int i = 0; i < clientsTbl.getModel().getColumnCount(); i++) {
            clientsTbl.getColumnModel().getColumn(i).setHeaderRenderer(dtcr);
        }

        clientHistoryPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 650, 210));

        middlePanel.add(clientHistoryPanel, "card2");

        mainPanel.add(middlePanel, java.awt.BorderLayout.CENTER);

        bottomPanel.setBackground(new java.awt.Color(204, 177, 244));
        bottomPanel.setPreferredSize(new java.awt.Dimension(710, 90));
        bottomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        detailsBtn.setBackground(new java.awt.Color(114, 14, 126));
        detailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        detailsBtn.setForeground(new java.awt.Color(255, 255, 255));
        detailsBtn.setText("<html>\n<p style=\"text-align: center;\">\nPodrobnosti\n</p>\n</html>");
        detailsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                detailsBtnMouseReleased(evt);
            }
        });
        bottomPanel.add(detailsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 110, 40));

        backBtn.setBackground(new java.awt.Color(114, 14, 126));
        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<html>\n<p style=\"text-align: center;\">\nSpäť\n</p>\n</html>");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backBtnMouseReleased(evt);
            }
        });
        bottomPanel.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 110, 40));

        mainPanel.add(bottomPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseReleased
        this.parentFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnMouseReleased

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        int selectedIndex = typeComboBox.getSelectedIndex();

        roomHistoryPanel.setVisible(false);
        clientHistoryPanel.setVisible(false);

        switch (selectedIndex) {
            case 0:
                roomHistoryPanel.setVisible(true);
                break;
            case 1:
                clientHistoryPanel.setVisible(true);
                break;
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void roomComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomComboBoxActionPerformed
        int roomIndex = roomComboBox.getSelectedIndex();
        if (roomIndex >= 0) {
            Room room = app.getSelectedRoom(roomIndex);
            populateRoomsTable(room);
        }
    }//GEN-LAST:event_roomComboBoxActionPerformed

    private void clientComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientComboBoxActionPerformed
        int clientIndex = clientComboBox.getSelectedIndex();
        if (clientIndex >= 0) {
            Client client = app.getSelectedClient(clientIndex);
            populateClientsTable(client);
        }
    }//GEN-LAST:event_clientComboBoxActionPerformed

    private void detailsBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsBtnMouseReleased
        int pageIndex = typeComboBox.getSelectedIndex();

        if (pageIndex == 0) {
            int roomIndex = roomsTbl.getSelectedRow();
            if (roomIndex < 0) {
                JOptionPane.showMessageDialog(null, "Vyberte záznam na zobrazenie podrobnosti.", "Chyba!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Accommodation selectedAccommodation = filteredAccommodations.get(roomIndex);
            new InfoFrame(selectedAccommodation.getDetails()).setVisible(true);

        } else if (pageIndex == 1) {
            int clientIndex = clientsTbl.getSelectedRow();
            if (clientIndex < 0) {
                JOptionPane.showMessageDialog(null, "Vyberte záznam na zobrazenie podrobnosti.", "Chyba!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Accommodation selectedAccommodation = filteredAccommodations.get(clientIndex);
            new InfoFrame(selectedAccommodation.getDetails()).setVisible(true);
        }
    }//GEN-LAST:event_detailsBtnMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JComboBox<String> clientComboBox;
    private javax.swing.JPanel clientHistoryPanel;
    private javax.swing.JLabel clientLbl;
    private javax.swing.JTable clientsTbl;
    private javax.swing.JButton detailsBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JComboBox<String> roomComboBox;
    private javax.swing.JPanel roomHistoryPanel;
    private javax.swing.JLabel roomLbl;
    private javax.swing.JTable roomsTbl;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JPanel topPanel;
    private javax.swing.JComboBox<String> typeComboBox;
    // End of variables declaration//GEN-END:variables
}
