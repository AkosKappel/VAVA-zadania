/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DataSerializer;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Administrator;
import model.Programmer;
import model.SecurityConsultant;

/**
 *
 * @author kappe
 */
public class DeleteSpecialistFrame extends javax.swing.JFrame {

    JFrame parentFrame;
    private final ArrayList<Programmer> programmers;
    private final ArrayList<SecurityConsultant> consultants;
    private final ArrayList<Administrator> administrators;
    DecimalFormat priceFormat;

    /**
     * Creates new form EditSpecialistFrame
     *
     * @param parent
     * @param programmers
     * @param consultants
     * @param administrators
     */
    public DeleteSpecialistFrame(JFrame parent, ArrayList<Programmer> programmers,
            ArrayList<SecurityConsultant> consultants, ArrayList<Administrator> administrators) {
        initComponents();

        this.parentFrame = parent;
        this.programmers = programmers;
        this.consultants = consultants;
        this.administrators = administrators;

        priceFormat = new DecimalFormat("########0.00");
        initTable(programmersTable);
        initTable(consultantsTable);
        initTable(administratorsTable);
        populateSpecialistComboBox();
    }

    private void initTable(JTable table) {
        ((DefaultTableCellRenderer) table.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        for (int i = 0; i < table.getRowCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    private void populateSpecialistComboBox() {
        String[] freelancerTypes = {"Programátor", "Bezpečnostný konzultant", "Administrátor"};
        specialistComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(freelancerTypes));
        specialistComboBox.setSelectedIndex(0);
    }

    private void populateProgrammersTable() {
        DefaultTableModel tblModel = (DefaultTableModel) programmersTable.getModel();
        tblModel.setRowCount(0);
        for (int i = 0; i < programmers.size(); i++) {
            Programmer p = programmers.get(i);
            String[] row = {p.getName(), priceFormat.format(p.getPricePerDay()) + " €", String.valueOf(p.getPracticeLength()),
                p.getHighestEducation(), p.getCertificatesString(), p.getType(), p.isAvailable() ? "áno" : "nie"};
            tblModel.addRow(row);
        }
    }

    private void populateConsultantsTable() {
        DefaultTableModel tblModel = (DefaultTableModel) consultantsTable.getModel();
        tblModel.setRowCount(0);
        for (int i = 0; i < consultants.size(); i++) {
            SecurityConsultant c = consultants.get(i);
            String[] row = {c.getName(), priceFormat.format(c.getPricePerDay()) + " €", String.valueOf(c.getPracticeLength()),
                c.getHighestEducation(), c.getCertificatesString(), c.isKybersecurityAuditor() ? "áno" : "nie", c.isAvailable() ? "áno" : "nie"};
            tblModel.addRow(row);
        }
    }

    private void populateAdministratorsTable() {
        DefaultTableModel tblModel = (DefaultTableModel) administratorsTable.getModel();
        tblModel.setRowCount(0);
        for (int i = 0; i < administrators.size(); i++) {
            Administrator a = administrators.get(i);
            String[] row = {a.getName(), priceFormat.format(a.getPricePerDay()) + " €", String.valueOf(a.getPracticeLength()),
                a.getHighestEducation(), a.getCertificatesString(), a.getType(), a.getPreferedPlatform(), a.isAvailable() ? "áno" : "nie"};
            tblModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        topPanel1 = new javax.swing.JPanel();
        mainLabel = new javax.swing.JLabel();
        specialistComboBox = new javax.swing.JComboBox<>();
        middlePanel = new javax.swing.JPanel();
        programmerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        programmersTable = new javax.swing.JTable();
        securityPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consultantsTable = new javax.swing.JTable();
        adminPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        administratorsTable = new javax.swing.JTable();
        bottomPanel = new javax.swing.JPanel();
        cancelBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Odstrániť špecialistu");
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 520));

        topPanel.setBackground(new java.awt.Color(253, 247, 236));
        topPanel.setMinimumSize(new java.awt.Dimension(500, 70));
        topPanel.setPreferredSize(new java.awt.Dimension(500, 70));
        topPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topPanel1.setBackground(new java.awt.Color(253, 247, 236));
        topPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        mainLabel.setText("Typ špecialistu:");
        topPanel1.add(mainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 180, 40));

        specialistComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        specialistComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        specialistComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialistComboBoxActionPerformed(evt);
            }
        });
        topPanel1.add(specialistComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 210, 30));

        topPanel.add(topPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));

        getContentPane().add(topPanel, java.awt.BorderLayout.PAGE_START);

        middlePanel.setBackground(new java.awt.Color(253, 247, 236));
        middlePanel.setLayout(new java.awt.CardLayout());

        programmerPanel.setBackground(new java.awt.Color(253, 247, 236));
        programmerPanel.setMinimumSize(new java.awt.Dimension(800, 330));
        programmerPanel.setPreferredSize(new java.awt.Dimension(800, 330));
        programmerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        programmersTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        programmersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Certifikáty", "Zaradenie", "Je voľný"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        programmersTable.setRowHeight(22);
        programmersTable.setSelectionBackground(new java.awt.Color(255, 153, 51));
        programmersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(programmersTable);

        programmerPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 730, 310));

        middlePanel.add(programmerPanel, "card2");

        securityPanel.setBackground(new java.awt.Color(253, 247, 236));
        securityPanel.setMinimumSize(new java.awt.Dimension(800, 330));
        securityPanel.setPreferredSize(new java.awt.Dimension(800, 330));
        securityPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        consultantsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        consultantsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Certifikáty", "Je audítor NBU", "Je voľný"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        consultantsTable.setRowHeight(22);
        consultantsTable.setSelectionBackground(new java.awt.Color(255, 153, 51));
        jScrollPane2.setViewportView(consultantsTable);

        securityPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 730, 310));

        middlePanel.add(securityPanel, "card3");

        adminPanel.setBackground(new java.awt.Color(253, 247, 236));
        adminPanel.setMinimumSize(new java.awt.Dimension(800, 330));
        adminPanel.setPreferredSize(new java.awt.Dimension(800, 330));
        adminPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        administratorsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        administratorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Cena za deň", "Dĺžka praxe", "Vzdelanie", "Certifikáty", "Zaradenie", "Platforma", "Je voľný"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        administratorsTable.setRowHeight(22);
        administratorsTable.setSelectionBackground(new java.awt.Color(255, 153, 51));
        jScrollPane3.setViewportView(administratorsTable);

        adminPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 730, 310));

        middlePanel.add(adminPanel, "card4");

        getContentPane().add(middlePanel, java.awt.BorderLayout.CENTER);

        bottomPanel.setBackground(new java.awt.Color(253, 247, 236));
        bottomPanel.setMinimumSize(new java.awt.Dimension(500, 80));
        bottomPanel.setPreferredSize(new java.awt.Dimension(500, 80));
        bottomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cancelBtn.setBackground(new java.awt.Color(255, 204, 102));
        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBtn.setText("Späť");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelBtnMouseReleased(evt);
            }
        });
        bottomPanel.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 100, 40));

        deleteBtn.setBackground(new java.awt.Color(255, 204, 102));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteBtn.setText("Odstrániť");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                deleteBtnMouseReleased(evt);
            }
        });
        bottomPanel.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 100, 40));

        getContentPane().add(bottomPanel, java.awt.BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void specialistComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialistComboBoxActionPerformed
        int selectedIndex = specialistComboBox.getSelectedIndex();

        programmerPanel.setVisible(false);
        securityPanel.setVisible(false);
        adminPanel.setVisible(false);

        switch (selectedIndex) {
            case 0:
                populateProgrammersTable();
                programmerPanel.setVisible(true);
                break;
            case 1:
                populateConsultantsTable();
                securityPanel.setVisible(true);
                break;
            case 2:
                populateAdministratorsTable();
                adminPanel.setVisible(true);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_specialistComboBoxActionPerformed

    private void cancelBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseReleased
        dispose();
        parentFrame.setVisible(true);
    }//GEN-LAST:event_cancelBtnMouseReleased

    private void deleteBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseReleased
        int selectedIndex = specialistComboBox.getSelectedIndex();
        int deleteIndex;

        switch (selectedIndex) {
            case 0:
                deleteIndex = programmersTable.getSelectedRow();
                if (deleteIndex < 0) {
                    JOptionPane.showMessageDialog(null, "Prosím vyberte si špecialistu, ktorého chcete odstrániť!");
                    return;
                }

                if (!programmers.get(deleteIndex).isAvailable()) {
                    JOptionPane.showMessageDialog(null, "Zvolený programétor sa nedá odstrániť pretože je prenajatý.",
                            "Chyba", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    programmers.remove(deleteIndex);
                    DataSerializer.saveProgrammersToFile(programmers, DataSerializer.PROGRAMMERS_FILE);
                    JOptionPane.showMessageDialog(null, "Programétor bol úspešne odstránený.");
                }
                break;
            case 1:
                deleteIndex = consultantsTable.getSelectedRow();
                if (deleteIndex < 0) {
                    JOptionPane.showMessageDialog(null, "Prosím vyberte si špecialistu, ktorého chcete odstrániť!");
                    return;
                }

                if (!consultants.get(deleteIndex).isAvailable()) {
                    JOptionPane.showMessageDialog(null, "Zvolený bezpečnostný konzultant sa nedá odstrániť pretože je prenajatý.",
                            "Chyba", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    consultants.remove(deleteIndex);
                    DataSerializer.saveConsultantsToFile(consultants, DataSerializer.CONSULTANTS_FILE);
                    JOptionPane.showMessageDialog(null, "Bezpečnostný konzultant bol úspešne odstránený.");
                }
                break;
            case 2:
                deleteIndex = administratorsTable.getSelectedRow();
                if (deleteIndex < 0) {
                    JOptionPane.showMessageDialog(null, "Prosím vyberte si špecialistu, ktorého chcete odstrániť!");
                    return;
                }

                if (!administrators.get(deleteIndex).isAvailable()) {
                    JOptionPane.showMessageDialog(null, "Zvolený administrátor sa nedá odstrániť pretože je prenajatý.",
                            "Chyba", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    administrators.remove(deleteIndex);
                    DataSerializer.saveAdministratorsToFile(administrators, DataSerializer.ADMINISTRATORS_FILE);
                    JOptionPane.showMessageDialog(null, "Administrátor bol úspešne odstránený.");
                }
                break;
        }
        dispose();
        parentFrame.setVisible(true);
    }//GEN-LAST:event_deleteBtnMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTable administratorsTable;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTable consultantsTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JPanel programmerPanel;
    private javax.swing.JTable programmersTable;
    private javax.swing.JPanel securityPanel;
    private javax.swing.JComboBox<String> specialistComboBox;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel topPanel1;
    // End of variables declaration//GEN-END:variables
}
