/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DataSerializer;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author kappe
 */
public class AddRentalRecordFrame extends javax.swing.JFrame {

    JFrame parentFrame;
    private final ArrayList<Programmer> programmers;
    private final ArrayList<SecurityConsultant> consultants;
    private final ArrayList<Administrator> administrators;
    private final ArrayList<Company> companies;
    private final ArrayList<RentalRecord> records;
    private final ArrayList<Freelancer> availableFreelancers;
    private final ArrayList<Freelancer> selectedFreelancers;

    /**
     * Creates new form AddRentalRecordFrame
     *
     * @param parent
     * @param programmers
     * @param consultants
     * @param administrators
     * @param companies
     * @param records
     */
    public AddRentalRecordFrame(JFrame parent, ArrayList<Programmer> programmers, ArrayList<SecurityConsultant> consultants,
            ArrayList<Administrator> administrators, ArrayList<Company> companies, ArrayList<RentalRecord> records) {
        initComponents();

        this.parentFrame = parent;
        this.programmers = programmers;
        this.consultants = consultants;
        this.administrators = administrators;
        this.companies = companies;
        this.records = records;

        selectedFreelancers = new ArrayList<>();
        availableFreelancers = new ArrayList<>();
        programmers.stream().filter(p -> (p.isAvailable())).forEachOrdered(p -> {
            availableFreelancers.add(p);
        });
        consultants.stream().filter(c -> (c.isAvailable())).forEachOrdered(c -> {
            availableFreelancers.add(c);
        });
        administrators.stream().filter(a -> (a.isAvailable())).forEachOrdered(a -> {
            availableFreelancers.add(a);
        });

        populateCompanyComboBox();
        initTables();
    }

    private void initTables() {
        ((DefaultTableCellRenderer) availableTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) selectedTable.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        DefaultTableModel tblModel = (DefaultTableModel) availableTable.getModel();

        for (int i = 0; i < availableFreelancers.size(); i++) {
            Freelancer f = availableFreelancers.get(i);
            if (f.isAvailable()) {
                String[] row = {f.getName(), f.getSpecialistType()};
                tblModel.addRow(row);
            }
        }
    }

    private void populateCompanyComboBox() {
        String[] companyArray = new String[companies.size()];
        for (int i = 0; i < companies.size(); i++) {
            companyArray[i] = companies.get(i).getName();
        }
        companyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(companyArray));
        companyComboBox.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainLabel = new javax.swing.JLabel();
        companyLabel = new javax.swing.JLabel();
        availableLabel = new javax.swing.JLabel();
        selectedLabel = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        companyComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedTable = new javax.swing.JTable();
        showBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vytvoriť záznam o prenájme");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(253, 247, 236));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        mainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainLabel.setText("Vytvorte nový záznam pre vybraného zamestnávateľa");
        mainPanel.add(mainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 750, 40));

        companyLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        companyLabel.setForeground(new java.awt.Color(255, 153, 0));
        companyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        companyLabel.setText("Zamestnávateľ:");
        mainPanel.add(companyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 110, 30));

        availableLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        availableLabel.setForeground(new java.awt.Color(255, 153, 0));
        availableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        availableLabel.setText("Dostupní špecialisti");
        mainPanel.add(availableLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 320, 30));

        selectedLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectedLabel.setForeground(new java.awt.Color(255, 153, 0));
        selectedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectedLabel.setText("Vybraní špecialisti na prenájom");
        mainPanel.add(selectedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 320, 30));

        addBtn.setBackground(new java.awt.Color(255, 204, 102));
        addBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addBtn.setText("Pridať");
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addBtnMouseReleased(evt);
            }
        });
        mainPanel.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 130, 30));

        removeBtn.setBackground(new java.awt.Color(255, 204, 102));
        removeBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        removeBtn.setText("Odstrániť");
        removeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeBtnMouseReleased(evt);
            }
        });
        mainPanel.add(removeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 430, 130, 30));

        cancelBtn.setBackground(new java.awt.Color(255, 204, 102));
        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBtn.setText("Späť");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelBtnMouseReleased(evt);
            }
        });
        mainPanel.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 490, 90, 40));

        createBtn.setBackground(new java.awt.Color(255, 204, 102));
        createBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createBtn.setText("Vytvoriť");
        createBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                createBtnMouseReleased(evt);
            }
        });
        mainPanel.add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 490, 90, 40));

        companyComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        companyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        mainPanel.add(companyComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 220, 30));

        availableTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        availableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Typ špecialistu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        availableTable.setRowHeight(22);
        availableTable.setSelectionBackground(new java.awt.Color(255, 153, 51));
        availableTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availableTable.setShowGrid(false);
        jScrollPane1.setViewportView(availableTable);

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 320, 260));

        selectedTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meno", "Typ špecialistu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        selectedTable.setRowHeight(22);
        selectedTable.setSelectionBackground(new java.awt.Color(255, 153, 51));
        selectedTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selectedTable.setShowHorizontalLines(false);
        selectedTable.setShowVerticalLines(false);
        jScrollPane2.setViewportView(selectedTable);

        mainPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 320, 260));

        showBtn.setBackground(new java.awt.Color(255, 204, 102));
        showBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showBtn.setText("Zobraziť údaje");
        showBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showBtnMouseReleased(evt);
            }
        });
        mainPanel.add(showBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 130, 30));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseReleased
        dispose();
        parentFrame.setVisible(true);
    }//GEN-LAST:event_cancelBtnMouseReleased

    private void addBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseReleased
        int selectedIndex = availableTable.getSelectedRow();
        if (selectedIndex < 0) {
            return;
        }

        Freelancer selectedFreelancer = availableFreelancers.get(selectedIndex);
        availableFreelancers.remove(selectedIndex);
        selectedFreelancers.add(selectedFreelancer);

        String[] row = {selectedFreelancer.getName(), selectedFreelancer.getSpecialistType()};
        ((DefaultTableModel) availableTable.getModel()).removeRow(selectedIndex);
        ((DefaultTableModel) selectedTable.getModel()).addRow(row);
    }//GEN-LAST:event_addBtnMouseReleased

    private void createBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createBtnMouseReleased
        if (selectedTable.getRowCount() > 0) {
            Company employer = companies.get(companyComboBox.getSelectedIndex());
            employer.setEmployeeCount(employer.getEmployeeCount() + selectedFreelancers.size());

            for (int i = 0; i < selectedFreelancers.size(); i++) {
                Freelancer freelancer = selectedFreelancers.get(i);
                freelancer.setAvailable(false);
            }

            records.add(new RentalRecord(selectedFreelancers, employer));
            DataSerializer.SaveAllModels(programmers, consultants, administrators, companies, records);
            JOptionPane.showMessageDialog(null, "Záznam bol úspešne uložený.");

            dispose();
            parentFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Pre vytvorenie záznamu o prenájme musíte vybrať aspoň jedného špecialistu!",
                    "Chyba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createBtnMouseReleased

    private void removeBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBtnMouseReleased
        int selectedIndex = selectedTable.getSelectedRow();
        if (selectedIndex < 0) {
            return;
        }

        Freelancer unselectedFreelancer = selectedFreelancers.get(selectedIndex);
        selectedFreelancers.remove(selectedIndex);
        availableFreelancers.add(unselectedFreelancer);

        String[] row = {unselectedFreelancer.getName(), unselectedFreelancer.getSpecialistType()};
        ((DefaultTableModel) selectedTable.getModel()).removeRow(selectedIndex);
        ((DefaultTableModel) availableTable.getModel()).addRow(row);
    }//GEN-LAST:event_removeBtnMouseReleased

    private void showBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showBtnMouseReleased
        int selectedIndex = availableTable.getSelectedRow();

        if (selectedIndex > -1) {
            Freelancer freelancer = availableFreelancers.get(selectedIndex);
            new DetailsFrame(freelancer.getDetails()).setVisible(true);
        }
    }//GEN-LAST:event_showBtnMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel availableLabel;
    private javax.swing.JTable availableTable;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> companyComboBox;
    private javax.swing.JLabel companyLabel;
    private javax.swing.JButton createBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton removeBtn;
    private javax.swing.JLabel selectedLabel;
    private javax.swing.JTable selectedTable;
    private javax.swing.JButton showBtn;
    // End of variables declaration//GEN-END:variables
}
